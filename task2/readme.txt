Использование программы:
1. Клонировать репозиторий.
2. Установить все зависимости командой: pip install requirements.txt
3. Запустить файл app.py

Вариант 2. Реализовать аутентификацию по паролю с подтверждением по email. В таблице идентификаторов должны храниться: логин, email, пароль, временный код подтверждения. Таблица идентификаторов должна представлять собой таблицу в реляционной БД, данные должны передаваться через SQL-запросы. При аутентификации на сервере сравниваются пароли и на email пользователя отправляется сгенерированный на сервере временный код подтверждения. На клиенте после отправки данных с паролем должен произойти редирект на форму для ввода временного кода подтверждения. После отправки кода на сервере сравниваются пришедший код и код из БД. При совпадении кодов аутентификация считается успешной и происходит редирект на страницу-заглушку.

Демонстрация работы:

1.	Вход на главную страницу.
2.	Попытка входа в личный кабинет без авторизации. (/lk)
3.	При попытке входа перенаправляет на страницу ввода логина и пароля.
4.	Форма регистрации 
5.	Форма ввода логина и пароля
6.	Регистрируем аккаунт и заполняем форму входа
7.	Идёт перенаправление на форму ввода временного пароля, нажимаем отправить временный пароль
8.	На почту приходит временный пароль
9.	При попытке ввода неверного временного пароля отображается Alert о невернном введённом временном пароле
10.	После ввода верного пароля нажимаем на кнопку Войти
11.	Открывается страница личного кабинета
12.	База данных sql

Скриншоты работы есть в отчёте.
 


